<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:ICSharpCode.AvalonEdit.CodeCompletion">
  <cc:InsightWindowTemplateSelector x:Key="templateSelector"/>
  <Style TargetType="{x:Type cc:InsightWindow}">
    <Setter Property="Window.SizeToContent" Value="WidthAndHeight"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.InfoBrushKey}}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static JetSystemColors.InfoTextBrushKey}}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
    <Setter Property="Control.Padding" Value="1,1,3,1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type cc:InsightWindow}">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" CornerRadius="2,2,2,2"
                  BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
            <AdornerDecorator>
              <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type cc:OverloadViewer}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type cc:OverloadViewer}">
          <Grid>
            <FrameworkElement.Resources>
              <cc:CollapseIfSingleOverloadConverter x:Key="collapseIfSingleOverloadConverter"/>
              <Style TargetType="{x:Type Button}" x:Key="upDownButtonStyle">
                <Style.Setters>
                  <Setter Property="Control.Background" Value="LightGray"/>
                  <Setter Property="Control.Padding" Value="2,2,2,2"/>
                  <Setter Property="FrameworkElement.Width" Value="9"/>
                  <Setter Property="FrameworkElement.Height" Value="9"/>
                  <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
                  <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bd" Background="{TemplateBinding Control.Background}" CornerRadius="2">
                          <ContentPresenter Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ContentControl.Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="LightBlue"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style.Setters>
              </Style>
              <DataTemplate x:Key="TextBlockTemplate">
                <TextBlock TextWrapping="Wrap" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"/>
              </DataTemplate>
            </FrameworkElement.Resources>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,4,0" Orientation="Horizontal"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Provider.Count, Converter={StaticResource collapseIfSingleOverloadConverter}}">
              <Button Name="PART_UP" Style="{StaticResource upDownButtonStyle}">
                <Path Stroke="Black" Fill="Black" Data="M 0,0.866 L 1,0.866 0.5,0 Z" Stretch="UniformToFill"/>
              </Button>
              <TextBlock Margin="2,0,2,0"
                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Provider.CurrentIndexText}"/>
              <Button Name="PART_DOWN" Style="{StaticResource upDownButtonStyle}">
                <Path Stroke="Black" Fill="Black" Data="M 0,0 L 1,0 0.5,0.866 Z" Stretch="UniformToFill"/>
              </Button>
            </StackPanel>
            <ContentPresenter Grid.Row="0" Grid.Column="1" ContentTemplateSelector="{StaticResource templateSelector}"
                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Provider.CurrentHeader}"/>
            <ContentPresenter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                              ContentTemplateSelector="{StaticResource templateSelector}"
                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Provider.CurrentContent}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>