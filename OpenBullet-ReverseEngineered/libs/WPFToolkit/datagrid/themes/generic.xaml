<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dg="clr-namespace:Microsoft.Windows.Controls"
                    xmlns:dgp="clr-namespace:Microsoft.Windows.Controls.Primitives">
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
  <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{Type Button}">
    <Grid>
      <Rectangle x:Name="Border" Fill="{DynamicResource {Static JetSystemColors.ControlBrushKey}}"
                 SnapsToDevicePixels="true"/>
      <Polygon x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,8,3,3"
               Opacity="0.15" Fill="Black" Stretch="Uniform" Points="0,10 10,10 10,0"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="Border" Value="{DynamicResource {Static JetSystemColors.ControlDarkBrushKey}}"
                Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="Border" Value="{DynamicResource {Static JetSystemColors.ControlDarkBrushKey}}"
                Property="Shape.Fill"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{Type dg:DataGrid}">
    <Setter Property="Control.Background" Value="{DynamicResource {Static JetSystemColors.ControlBrushKey}}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="#FF688CAF"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="dg:DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dg:DataGrid}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"
                  Padding="{TemplateBinding Control.Padding}">
            <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
              <Control.Template>
                <ControlTemplate TargetType="{Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Command="{Static dg:DataGrid.SelectAllCommand}" Template="{StaticResource SelectAllButtonTemplate}"
                            Focusable="false"
                            Width="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGrid}}, Path=CellsPanelHorizontalOffset}"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGrid}}, Path=HeadersVisibility, Converter={Static dg:DataGrid.HeadersVisibilityConverter}, ConverterParameter={Static dg:DataGridHeadersVisibility.All}}"/>
                    <dgp:DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1"
                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGrid}}, Path=HeadersVisibility, Converter={Static dg:DataGrid.HeadersVisibilityConverter}, ConverterParameter={Static dg:DataGridHeadersVisibility.Column}}"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"/>
                    <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="2" Orientation="Vertical"
                               Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                               ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                               Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                               Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                    <Grid Row="2" Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal"
                                 Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                 Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                 Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Control.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{Type dgp:DataGridColumnHeadersPresenter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dgp:DataGridColumnHeadersPresenter}">
          <Grid>
            <dgp:DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="false"/>
            <ItemsPresenter/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{Type Thumb}">
    <Setter Property="FrameworkElement.Width" Value="8"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeWE"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RowHeaderGripperStyle" TargetType="{Type Thumb}">
    <Setter Property="FrameworkElement.Height" Value="8"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type dgp:DataGridColumnHeader}">
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dgp:DataGridColumnHeader}">
          <Grid>
            <dg:DataGridHeaderBorder SortDirection="{TemplateBinding dgp:DataGridColumnHeader.SortDirection}"
                                     IsHovered="{TemplateBinding UIElement.IsMouseOver}"
                                     IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                                     IsClickable="{TemplateBinding dgp:DataGridColumnHeader.CanUserSort}"
                                     Background="{TemplateBinding Control.Background}"
                                     BorderBrush="{TemplateBinding Control.BorderBrush}"
                                     BorderThickness="{TemplateBinding Control.BorderThickness}"
                                     Padding="{TemplateBinding Control.Padding}"
                                     SeparatorVisibility="{TemplateBinding dgp:DataGridColumnHeader.SeparatorVisibility}"
                                     SeparatorBrush="{TemplateBinding dgp:DataGridColumnHeader.SeparatorBrush}">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
            </dg:DataGridHeaderBorder>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type dg:DataGridColumnFloatingHeader}">
    <Setter Property="UIElement.Opacity" Value="0.6"/>
    <Setter Property="Control.BorderBrush" Value="#FF688CAF"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dg:DataGridColumnFloatingHeader}">
          <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                  Background="{TemplateBinding Control.Background}">
            <Grid>
              <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding FrameworkElement.Margin}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type dg:DataGridColumnDropSeparator}">
    <Setter Property="Control.Background" Value="#FF000080"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dg:DataGridColumnDropSeparator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type dg:DataGridRow}">
    <Setter Property="Control.Background" Value="{DynamicResource {Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Validation.ErrorTemplate" Value="{Null}"/>
    <Setter Property="dg:DataGridRow.ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dg:DataGridRow}">
          <Border x:Name="DGR_Border" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <dgp:SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <dgp:DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding dg:DataGridRow.ItemsPanel}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <dgp:DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding dg:DataGridRow.DetailsVisibility}"
                                            dgp:SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGrid}}, Path=AreRowDetailsFrozen, Converter={Static dg:DataGrid.RowDetailsScrollingConverter}, ConverterParameter={Static dg:SelectiveScrollingOrientation.Vertical}}"/>
              <dgp:DataGridRowHeader dgp:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.RowSpan="2"
                                     Visibility="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGrid}}, Path=HeadersVisibility, Converter={Static dg:DataGrid.HeadersVisibilityConverter}, ConverterParameter={Static dg:DataGridHeadersVisibility.Row}}"/>
            </dgp:SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type dgp:DataGridCellsPresenter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dgp:DataGridCellsPresenter}">
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="{Static dg:DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
  <Style TargetType="{Type dg:DataGridCell}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dg:DataGridCell}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dg:DataGridCell.IsSelected" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource {Static JetSystemColors.HighlightBrushKey}}"/>
        <Setter Property="Control.Foreground"
                Value="{DynamicResource {Static JetSystemColors.HighlightTextBrushKey}}"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource {Static JetSystemColors.HighlightBrushKey}}"/>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource {Static dg:DataGrid.FocusBorderBrushKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{Type dgp:DataGridRowHeader}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dgp:DataGridRowHeader}">
          <Grid>
            <dg:DataGridHeaderBorder IsSelected="{TemplateBinding dgp:DataGridRowHeader.IsRowSelected}"
                                     IsHovered="{TemplateBinding UIElement.IsMouseOver}"
                                     IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                                     Background="{TemplateBinding Control.Background}"
                                     BorderBrush="{TemplateBinding Control.BorderBrush}"
                                     BorderThickness="{TemplateBinding Control.BorderThickness}"
                                     Padding="{TemplateBinding Control.Padding}" Orientation="Horizontal"
                                     SeparatorVisibility="{TemplateBinding dgp:DataGridRowHeader.SeparatorVisibility}"
                                     SeparatorBrush="{TemplateBinding dgp:DataGridRowHeader.SeparatorBrush}">
              <StackPanel Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Control SnapsToDevicePixels="false"
                         Visibility="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource bool2VisibilityConverter}}"
                         Template="{Binding RelativeSource={RelativeSource AncestorType={Type dg:DataGridRow}}, Path=ValidationErrorTemplate}"/>
              </StackPanel>
            </dg:DataGridHeaderBorder>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top"
                   Style="{StaticResource RowHeaderGripperStyle}"/>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom"
                   Style="{StaticResource RowHeaderGripperStyle}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type dg:DataGridComboBoxColumn+TextBlockComboBox}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type dg:DataGridComboBoxColumn+TextBlockComboBox}">
          <ContentPresenter Margin="1,1,1,1" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                            ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="false"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>