<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Converters"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../../Themes/Aero2/Common.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <conv:ProgressBarWidthConverter x:Key="ProgressBarWidthConverter"/>
  <ControlTemplate x:Key="BusyIndicatorTemplate" TargetType="{x:Type local:BusyIndicator}">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="VisibilityStates">
          <VisualState x:Name="Hidden">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="busycontent"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <ObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                  </ObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="overlay"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <ObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                  </ObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Visible">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="busycontent"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <ObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </ObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="overlay"
                                             Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <ObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </ObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="BusyStatusStates">
          <VisualState x:Name="Idle">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="content"
                                             Storyboard.TargetProperty="(Control.IsEnabled)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <ObjectKeyFrame.Value>
                    <sys:Boolean>True</sys:Boolean>
                  </ObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Busy">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="content"
                                             Storyboard.TargetProperty="(Control.IsEnabled)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <ObjectKeyFrame.Value>
                    <sys:Boolean>False</sys:Boolean>
                  </ObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentControl x:Name="content" Content="{TemplateBinding ContentControl.Content}"
                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                      HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                      VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsTabStop="false"
                      Focusable="false"/>
      <Rectangle x:Name="overlay" Style="{TemplateBinding local:BusyIndicator.OverlayStyle}"/>
      <ContentPresenter x:Name="busycontent">
        <ContentPresenter.Content>
          <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border Background="White" BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"
                    CornerRadius="0">
              <Border Margin="1" Background="{TemplateBinding Control.Background}" CornerRadius="0">
                <Grid x:Name="_grid" MinWidth="150">
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <ContentPresenter x:Name="busyContent" Content="{TemplateBinding local:BusyIndicator.BusyContent}"
                                    ContentTemplate="{TemplateBinding local:BusyIndicator.BusyContentTemplate}"
                                    HorizontalAlignment="Center" Margin="8"/>
                  <ProgressBar Grid.Row="1" Style="{TemplateBinding local:BusyIndicator.ProgressBarStyle}">
                    <FrameworkElement.Width>
                      <MultiBinding Converter="{StaticResource ProgressBarWidthConverter}">
                        <Binding Path="ActualWidth" ElementName="busyContent"/>
                        <Binding Path="MinWidth" ElementName="_grid"/>
                      </MultiBinding>
                    </FrameworkElement.Width>
                  </ProgressBar>
                </Grid>
              </Border>
            </Border>
          </Grid>
        </ContentPresenter.Content>
      </ContentPresenter>
    </Grid>
  </ControlTemplate>
  <Style TargetType="{x:Type local:BusyIndicator}">
    <Setter Property="Control.Background" Value="{StaticResource PanelBackgroundBrush}"/>
    <Setter Property="local:BusyIndicator.BusyContent" Value="Please wait..."/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="local:BusyIndicator.OverlayStyle">
      <Setter.Value>
        <Style TargetType="{x:Type Rectangle}">
          <Setter Property="Shape.Fill" Value="White"/>
          <Setter Property="UIElement.Opacity" Value="0.5"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="local:BusyIndicator.ProgressBarStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ProgressBar}">
          <Setter Property="ProgressBar.IsIndeterminate" Value="true"/>
          <Setter Property="FrameworkElement.Height" Value="15"/>
          <Setter Property="FrameworkElement.Margin" Value="8,0,8,8"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="local:BusyIndicator.DisplayAfter" Value="00:00:00.1"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template" Value="{StaticResource BusyIndicatorTemplate}"/>
  </Style>
</ResourceDictionary>