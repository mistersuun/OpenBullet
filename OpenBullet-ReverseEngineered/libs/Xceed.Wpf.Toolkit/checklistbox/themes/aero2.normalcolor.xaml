<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:prim="clr-namespace:Xceed.Wpf.Toolkit.Primitives"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit">
  <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <Style TargetType="{x:Type local:CheckListBox}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CheckListBox}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto">
              <StackPanel>
                <prim:SelectAllSelectorItem x:Name="PART_SelectAllSelectorItem"
                                            Content="{TemplateBinding prim:SelectAllSelector.SelectAllContent}"
                                            Visibility="{Binding IsSelectAllActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </StackPanel>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.BorderBrush"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlMouseOverBorderKey}}"/>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
        <Setter Property="Control.BorderBrush"
                Value="{DynamicResource {x:Static themes:ResourceKeys.ControlSelectedBorderKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>