<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
                    xmlns:colconv="clr-namespace:Xceed.Wpf.Toolkit.Converters"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes"
                    xmlns:pg="clr-namespace:Xceed.Wpf.Toolkit.PropertyGrid">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../../Themes/Aero2/Glyphs.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <conv:InverseBoolConverter x:Key="InverseBoolConverter"/>
  <conv:ObjectTypeToNameConverter x:Key="ObjectTypeToNameConverter"/>
  <colconv:NewItemTypesComboBoxConverter x:Key="NewItemTypesComboBoxConverter"/>
  <Style x:Key="CollectionControlButtonStyle" TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Opacity" Value="0.6"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.Height" Value="26"/>
    <Setter Property="FrameworkElement.Width" Value="26"/>
  </Style>
  <Style TargetType="{x:Type local:CollectionControl}">
    <Style.Resources>
      <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemsControl.ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <TextBlock Text="{Binding Converter={StaticResource ObjectTypeToNameConverter}}"/>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </Style.Resources>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CollectionControl}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid Margin="{TemplateBinding Control.Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1.5*"/>
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <ContentControl Margin="0,0,0,5" Content="{TemplateBinding local:CollectionControl.TypeSelectionLabel}"/>
                <ComboBox x:Name="PART_NewItemTypesComboBox" Grid.Row="1" Margin="0,0,0,3" HorizontalAlignment="Stretch">
                  <ItemsControl.ItemsSource>
                    <MultiBinding Converter="{StaticResource NewItemTypesComboBoxConverter}">
                      <Binding Path="ItemsSourceType" RelativeSource="{RelativeSource TemplatedParent}"/>
                      <Binding Path="NewItemTypes" RelativeSource="{RelativeSource TemplatedParent}"/>
                    </MultiBinding>
                  </ItemsControl.ItemsSource>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Converter={StaticResource ObjectTypeToNameConverter}}"/>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ComboBox>
                <Button Margin="3,0,0,3" Grid.Row="1" Grid.Column="1" Padding="5,0" Content="Add" Command="New"
                        CommandParameter="{Binding SelectedItem, ElementName=PART_NewItemTypesComboBox}"/>
                <ListBox x:Name="PART_ListBox" Grid.Row="2" Grid.ColumnSpan="2" SelectedIndex="0"
                         ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
                         SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"/>
                <StackPanel Margin="7,2,0,0" VerticalAlignment="Top" Grid.Column="2" Grid.Row="2">
                  <Button Style="{StaticResource CollectionControlButtonStyle}" Command="ComponentCommands.MoveUp"
                          CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                    <Path Fill="#FF000000" Data="M 6,0 L 12,7 8,7 8,12 4,12 4,7 0,7 Z"/>
                  </Button>
                  <Button Margin="0,1,0,0" Style="{StaticResource CollectionControlButtonStyle}"
                          Command="ComponentCommands.MoveDown"
                          CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                    <Path Fill="#FF000000" Data="M 4,0 L 8,0 8,5 12,5 6,12 0,5 4,5 Z"/>
                  </Button>
                  <Button Margin="0,7,0,0" Style="{StaticResource CollectionControlButtonStyle}" Command="Delete"
                          CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                    <Image Stretch="None" Height="16" Width="16" Margin="1" Source="./../Images/Delete16.png"/>
                  </Button>
                  <Button Margin="0,7,0,0" Style="{StaticResource CollectionControlButtonStyle}" Command="Copy"
                          CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                    <Image Stretch="None" Height="16" Width="16" Margin="1" Source="./../Images/Duplicate.png"/>
                  </Button>
                </StackPanel>
              </Grid>
              <Grid Column="1" Margin="20,0,0,0">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <ContentControl Grid.Column="1" Content="{TemplateBinding local:CollectionControl.PropertiesLabel}"/>
                <pg:PropertyGrid x:Name="PART_PropertyGrid" Grid.Row="1" Grid.Column="1" Margin="0,5,0,0"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 SelectedObject="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
                  <pg:PropertyGrid.EditorDefinitions>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}">                      <!-- constructor argument:
                           EditorDefinitions
                      -->

                    </Binding>
                  </pg:PropertyGrid.EditorDefinitions>
                </pg:PropertyGrid>
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"
                      TargetName="PART_NewItemTypesComboBox" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PrimitiveTypeCollectionControl" TargetType="{x:Type local:PrimitiveTypeCollectionControl}">
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1,1,0,1"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Padding" Value="2,0,0,0"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PrimitiveTypeCollectionControl}">
          <local:MultiLineTextEditor Background="{TemplateBinding Control.Background}"
                                     BorderBrush="{TemplateBinding Control.BorderBrush}"
                                     BorderThickness="{TemplateBinding Control.BorderThickness}"
                                     Content="{TemplateBinding ContentControl.Content}"
                                     ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                     Padding="{TemplateBinding Control.Padding}"
                                     HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                     IsOpen="{TemplateBinding local:PrimitiveTypeCollectionControl.IsOpen}"
                                     IsReadOnly="{TemplateBinding local:PrimitiveTypeCollectionControl.IsReadOnly}"
                                     VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                     DropDownWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                     Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"/>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource {x:Static themes:ResourceKeys.ControlMouseOverBorderKey}}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter Value="{DynamicResource {x:Static themes:ResourceKeys.ControlSelectedBorderKey}}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}"
                      Property="Control.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:PrimitiveTypeCollectionControl}"
         BasedOn="{StaticResource PrimitiveTypeCollectionControl}"/>
  <Style x:Key="CollectionControlButton" TargetType="{x:Type local:CollectionControlButton}">
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="2,0,0,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="ContentControl.Content" Value="(Collection)"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.IsTabStop" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid SnapsToDevicePixels="true">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Border Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
              </Border>
              <chrome:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0,2.75,2.75,0"
                                   RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                   RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CollectionControlButton}}">
                <Grid x:Name="arrowGlyph" IsHitTestVisible="false" Column="1" Margin="5">
                  <Path x:Name="Arrow" Width="9" Height="5" Data="{StaticResource DownArrowGeometry}" Fill="#FF000000"
                        Margin="0,1,0,0"/>
                </Grid>
              </chrome:ButtonChrome>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              <Setter Property="Control.Foreground" Value="Gray"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:CollectionControlButton}"
         BasedOn="{StaticResource CollectionControlButton}"/>
</ResourceDictionary>