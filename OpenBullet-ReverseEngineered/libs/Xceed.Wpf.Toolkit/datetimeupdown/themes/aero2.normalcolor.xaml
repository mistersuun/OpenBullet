<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit">
  <DataTemplate x:Key="DefaultWatermarkTemplate">
    <ContentControl Foreground="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Focusable="false"
                    Margin="0,0,3,0" Content="{Binding}"/>
  </DataTemplate>
  <Style x:Key="DateTimeUpDown" TargetType="{x:Type local:DateTimeUpDown}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Right"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="InputBase.TextAlignment" Value="Right"/>
    <Setter Property="InputBase.WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DateTimeUpDown}">
          <local:ButtonSpinner x:Name="PART_Spinner" IsTabStop="false" Background="{TemplateBinding Control.Background}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               BorderThickness="{TemplateBinding Control.BorderThickness}" HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               ButtonSpinnerLocation="{TemplateBinding UpDownBase`1.ButtonSpinnerLocation}"
                               AllowSpin="{TemplateBinding UpDownBase`1.AllowSpin}"
                               ShowButtonSpinner="{TemplateBinding UpDownBase`1.ShowButtonSpinner}">
            <local:WatermarkTextBox x:Name="PART_TextBox" BorderThickness="0" Background="Transparent"
                                    ContextMenu="{TemplateBinding FrameworkElement.ContextMenu}"
                                    FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                                    FontStretch="{TemplateBinding Control.FontStretch}" FontStyle="{TemplateBinding Control.FontStyle}"
                                    FontWeight="{TemplateBinding Control.FontWeight}" Foreground="{TemplateBinding Control.Foreground}"
                                    HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsTabStop="true"
                                    MinWidth="20" AcceptsReturn="false" Padding="{TemplateBinding Control.Padding}"
                                    TextAlignment="{TemplateBinding InputBase.TextAlignment}" TextWrapping="NoWrap"
                                    TabIndex="{TemplateBinding Control.TabIndex}" Watermark="{TemplateBinding InputBase.Watermark}"
                                    WatermarkTemplate="{TemplateBinding InputBase.WatermarkTemplate}"
                                    IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"/>
          </local:ButtonSpinner>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource {x:Static themes:ResourceKeys.ControlMouseOverBorderKey}}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False"/>
                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_TextBox" Property="TextBoxBase.IsReadOnly" Value="true"/>
            </MultiDataTrigger>
            <DataTrigger Value="True" Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}">
              <Setter TargetName="PART_TextBox" Property="TextBoxBase.IsReadOnly" Value="true"/>
            </DataTrigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter Value="{DynamicResource {x:Static themes:ResourceKeys.ControlSelectedBorderKey}}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="PART_TextBox" Value="{Binding ElementName=PART_TextBox}"
                      Property="FocusManager.FocusedElement"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:DateTimeUpDown}" BasedOn="{StaticResource DateTimeUpDown}"/>
</ResourceDictionary>