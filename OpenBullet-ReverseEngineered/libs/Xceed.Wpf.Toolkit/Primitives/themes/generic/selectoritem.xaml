<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:primitives="clr-namespace:Xceed.Wpf.Toolkit.Primitives">
  <Style TargetType="{x:Type primitives:SelectorItem}">
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type primitives:Selector}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type primitives:Selector}}}"/>
    <Setter Property="Control.Padding" Value="4,0,0,0"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type primitives:SelectorItem}">
          <Border x:Name="_background" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
            <CheckBox Padding="{TemplateBinding Control.Padding}"
                      HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                      IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}">
              <ContentControl.Content>
                <ContentControl Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Foreground="{TemplateBinding Control.Foreground}"/>
              </ContentControl.Content>
            </CheckBox>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="_background" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="_background" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>