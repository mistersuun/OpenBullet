<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="..\..\Themes\Generic\Glyphs.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <conv:InverseBoolConverter x:Key="InverseBoolConverter"/>
  <Image x:Key="DefaultContent" x:Shared="false" Height="16" Width="18" Source="./../Images/Notes16.png"/>
  <LinearGradientBrush x:Key="PopupDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFA3AEB9" Offset="0"/>
    <GradientStop Color="#FF8399A9" Offset="0.375"/>
    <GradientStop Color="#FF718597" Offset="0.375"/>
    <GradientStop Color="#FF617584" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Offset="0" Color="#FFffffff"/>
        <GradientStop Offset="1" Color="#FFE8EBED"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid SnapsToDevicePixels="true">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Border Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
              </Border>
              <chrome:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" CornerRadius="0,2.75,2.75,0"
                                   RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                   RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                   RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MultiLineTextEditor}}"
                                   RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MultiLineTextEditor}}">
                <Grid x:Name="arrowGlyph" IsHitTestVisible="false" Column="1" Margin="5">
                  <Path x:Name="Arrow" Width="9" Height="5" Data="{StaticResource DownArrowGeometry}" Fill="#FF000000"
                        Margin="0,1,0,0"/>
                </Grid>
              </chrome:ButtonChrome>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              <Setter Property="Control.Foreground" Value="Gray"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:MultiLineTextEditor}">
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0"/>
          <GradientStop Color="#FF8399A9" Offset="0.375"/>
          <GradientStop Color="#FF718597" Offset="0.375"/>
          <GradientStop Color="#FF617584" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.BorderThickness" Value="1,1,0,1"/>
    <Setter Property="ContentControl.Content" Value="{StaticResource DefaultContent}"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Padding" Value="2,0,0,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:MultiLineTextEditor}">
          <Grid x:Name="Root">
            <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" IsTabStop="true" MinHeight="22"
                          SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                          BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Padding="{TemplateBinding Control.Padding}" Content="{TemplateBinding ContentControl.Content}"
                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                          ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                          Style="{StaticResource ToggleButtonStyle}"
                          VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                          IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"/>
            <Popup StaysOpen="false" Placement="Bottom" SnapsToDevicePixels="true" AllowsTransparency="true"
                   Focusable="false" PopupAnimation="Slide"
                   Width="{TemplateBinding local:MultiLineTextEditor.DropDownWidth}"
                   Height="{TemplateBinding local:MultiLineTextEditor.DropDownHeight}"
                   ToolTip="{x:Static sys:String.Empty}" IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}">
              <FrameworkElement.Resources>
                <Style TargetType="{x:Type ToolTip}">
                  <Style.Triggers>
                    <Trigger Property="ContentControl.Content" Value="{x:Static sys:String.Empty}">
                      <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Resources>
              <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}"
                      BorderBrush="{StaticResource PopupDarkBorderBrush}">
                <Grid>
                  <TextBox x:Name="PART_TextBox" AcceptsReturn="true"
                           TextWrapping="{TemplateBinding local:MultiLineTextEditor.TextWrapping}"
                           Padding="{TemplateBinding Control.Padding}" VerticalScrollBarVisibility="Auto"
                           HorizontalScrollBarVisibility="Auto"
                           SpellCheck.IsEnabled="{TemplateBinding local:MultiLineTextEditor.IsSpellCheckEnabled}"
                           IsReadOnly="{TemplateBinding local:MultiLineTextEditor.IsReadOnly}"
                           TextAlignment="{TemplateBinding local:MultiLineTextEditor.TextAlignment}" Margin="3"
                           Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}">
                  </TextBox>
                  <Thumb x:Name="PART_ResizeThumb" HorizontalAlignment="Right" VerticalAlignment="Bottom" Cursor="SizeNWSE">
                    <Control.Template>
                      <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="Transparent">
                          <Path Data="M 0.5,6.5 L 6.5,0.5 M 6.5,3.5 L 3.5,6.5 " Stroke="Black" StrokeThickness="1"/>
                        </Grid>
                      </ControlTemplate>
                    </Control.Template>
                  </Thumb>
                </Grid>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>