<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Converters"
                    xmlns:coreConv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters">
  <coreConv:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter"/>
  <LinearGradientBrush x:Key="NormalThumbFillBackground" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
    <GradientStop Color="#FFD6D6D6" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MouseOverThumbFillBackground" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFBBE3F9" Offset="0.5"/>
    <GradientStop Color="#FFB1E0F8" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedThumbFillBackground" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FF5DB2E0" Offset="0.5"/>
    <GradientStop Color="#FF4F93BD" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SliderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="#FFB2B5B3" Offset="0"/>
    <GradientStop Color="#FFFAFAFA" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SliderVerticalBorderBrush" StartPoint="0,0.5" EndPoint="1,0.5">
    <GradientStop Color="#FFB2B5B3" Offset="0"/>
    <GradientStop Color="#FFFAFAFA" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="DefaultRangeStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle x:Name="MainBorder" Fill="{TemplateBinding Control.Background}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ThumbFocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="-2" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ThumbTemplate" TargetType="{x:Type Thumb}">
    <Grid>
      <Border x:Name="BackgroundFadingBorder" Background="Black"/>
      <Border x:Name="BackgroundBorder" BorderBrush="#FF929292" BorderThickness="1" CornerRadius="1">
        <Rectangle x:Name="MainBorder" StrokeThickness="1" Stroke="White" Width="9" Height="20" Opacity="1"
                   SnapsToDevicePixels="true"
                   Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource NormalThumbFillBackground}}"/>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="MainBorder" Property="UIElement.Opacity" Value="0.9"/>
      </Trigger>
      <Trigger Property="UIElement.IsMouseCaptureWithin" Value="true">
        <Setter TargetName="MainBorder" Property="UIElement.Opacity" Value="0.8"/>
      </Trigger>
      <DataTrigger Value="Vertical"
                   Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Slider}}, Path=Orientation}">
        <Setter TargetName="MainBorder" Property="FrameworkElement.Width" Value="20"/>
        <Setter TargetName="MainBorder" Property="FrameworkElement.Height" Value="9"/>
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                     Value="{x:Null}"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="MainBorder" Property="UIElement.Opacity" Value="1"/>
        <Setter TargetName="BackgroundBorder" Property="Border.BorderBrush" Value="#FF3C7FB1"/>
        <Setter TargetName="MainBorder" Value="{StaticResource MouseOverThumbFillBackground}" Property="Shape.Fill"/>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                     Value="{x:Null}"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptureWithin}" Value="True"/>
        </MultiDataTrigger.Conditions>
        <Setter TargetName="BackgroundBorder" Property="Border.BorderBrush" Value="#FF2C628B"/>
        <Setter TargetName="MainBorder" Value="{StaticResource PressedThumbFillBackground}" Property="Shape.Fill"/>
      </MultiDataTrigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="BackgroundBorder" Property="Border.BorderBrush" Value="#FFD7D7D7"/>
        <Setter TargetName="MainBorder" Property="Shape.Fill" Value="#FFF4F4F4"/>
        <Setter TargetName="MainBorder" Property="Shape.Stroke" Value="#FFD7D7D7"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
    <Track x:Name="PART_Track" Orientation="{TemplateBinding Slider.Orientation}">
      <Track.Thumb>
        <Thumb x:Name="thumb" Focusable="true" FocusVisualStyle="{StaticResource ThumbFocusVisualStyle}"
               Background="{TemplateBinding Control.Background}" Template="{StaticResource ThumbTemplate}"/>
      </Track.Thumb>
    </Track>
  </ControlTemplate>
  <ControlTemplate x:Key="HorizontalTickSliderTemplate" TargetType="{x:Type Slider}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <TickBar Name="TopTick" Grid.Row="0" SnapsToDevicePixels="true" Placement="Top" Fill="Black" Height="4"
               Visibility="Collapsed"/>
      <Border Grid.Row="1" SnapsToDevicePixels="true" Visibility="Hidden">
        <Track x:Name="PART_Track" Orientation="{TemplateBinding Slider.Orientation}">
          <Track.Thumb>
            <Thumb x:Name="Thumb" Focusable="true" Template="{StaticResource ThumbTemplate}"/>
          </Track.Thumb>
        </Track>
      </Border>
      <TickBar Name="BottomTick" Grid.Row="2" SnapsToDevicePixels="true" Fill="Black" Placement="Bottom"
               Height="4" Visibility="Collapsed"/>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Value="TopLeft"
                   Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}">
        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
      <DataTrigger Value="BottomRight"
                   Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}">
        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
      <DataTrigger Value="Both"
                   Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}">
        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="VerticalTickSliderTemplate" TargetType="{x:Type Slider}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TickBar Name="LeftTick" Grid.Column="0" SnapsToDevicePixels="true" Placement="Left" Fill="Black" Width="4"
               Visibility="Collapsed"/>
      <Border Grid.Column="1" SnapsToDevicePixels="true" Visibility="Hidden">
        <Track x:Name="PART_Track" Orientation="{TemplateBinding Slider.Orientation}">
          <Track.Thumb>
            <Thumb x:Name="Thumb" Focusable="true" Template="{StaticResource ThumbTemplate}"/>
          </Track.Thumb>
        </Track>
      </Border>
      <TickBar Name="RightTick" Grid.Column="2" SnapsToDevicePixels="true" Fill="Black" Placement="Right"
               Width="4" Visibility="Collapsed"/>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Value="TopLeft"
                   Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}">
        <Setter TargetName="LeftTick" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
      <DataTrigger Value="BottomRight"
                   Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}">
        <Setter TargetName="RightTick" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
      <DataTrigger Value="Both"
                   Binding="{Binding TickPlacement, RelativeSource={RelativeSource AncestorType={x:Type local:RangeSlider}}}">
        <Setter TargetName="LeftTick" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="RightTick" Property="UIElement.Visibility" Value="Visible"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="VerticalRangeSlider" TargetType="{x:Type local:RangeSlider}">
    <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
            BorderThickness="{TemplateBinding Control.BorderThickness}"
            Background="{TemplateBinding Control.Background}">
      <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition x:Name="LeftColumn" Width="0"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition x:Name="RightColumn" Width="0"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="11"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="11"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" BorderThickness="1"
                BorderBrush="{StaticResource SliderVerticalBorderBrush}" Background="#FFE7EAEA"
                VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="4"/>
        <Slider x:Name="TickSlider" Orientation="Vertical" Grid.RowSpan="5" Grid.ColumnSpan="3" Focusable="false"
                Margin="0,5.5,0,5.5" Template="{StaticResource VerticalTickSliderTemplate}"
                TickFrequency="{TemplateBinding local:RangeSlider.TickFrequency}"
                Minimum="{Binding Minimum, ElementName=PART_LowerSlider}"
                Maximum="{Binding Maximum, ElementName=PART_HigherSlider}"/>
        <RepeatButton x:Name="PART_LowerRange" Height="{TemplateBinding local:RangeSlider.LowerRangeWidth}" Grid.Row="3"
                      Grid.Column="1" Background="{TemplateBinding local:RangeSlider.LowerRangeBackground}"
                      SnapsToDevicePixels="true"
                      Style="{Binding LowerRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}"/>
        <RepeatButton Height="{TemplateBinding local:RangeSlider.RangeWidth}" Grid.Row="2" Grid.Column="1"
                      Background="{TemplateBinding local:RangeSlider.RangeBackground}" SnapsToDevicePixels="true"
                      Style="{Binding RangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}"/>
        <RepeatButton x:Name="PART_HigherRange" Height="{TemplateBinding local:RangeSlider.HigherRangeWidth}"
                      Grid.Row="1" Grid.Column="1" Background="{TemplateBinding local:RangeSlider.HigherRangeBackground}"
                      SnapsToDevicePixels="true"
                      Style="{Binding HigherRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}"/>
        <Slider x:Name="PART_LowerSlider" Orientation="Vertical" Grid.RowSpan="5" Grid.Column="1" Focusable="false"
                Background="{TemplateBinding local:RangeSlider.LowerThumbBackground}"
                Template="{StaticResource SliderTemplate}"
                IsSnapToTickEnabled="{TemplateBinding local:RangeSlider.IsSnapToTickEnabled}"
                TickFrequency="{TemplateBinding local:RangeSlider.TickFrequency}" HorizontalAlignment="Left"
                AutoToolTipPlacement="{TemplateBinding local:RangeSlider.AutoToolTipPlacement}"
                AutoToolTipPrecision="{TemplateBinding local:RangeSlider.AutoToolTipPrecision}"/>
        <Slider x:Name="PART_HigherSlider" Grid.RowSpan="5" Grid.Column="1" Orientation="Vertical"
                Focusable="false" Background="{TemplateBinding local:RangeSlider.HigherThumbBackground}"
                Template="{StaticResource SliderTemplate}"
                IsSnapToTickEnabled="{TemplateBinding local:RangeSlider.IsSnapToTickEnabled}"
                TickFrequency="{TemplateBinding local:RangeSlider.TickFrequency}" HorizontalAlignment="Left"
                AutoToolTipPlacement="{TemplateBinding local:RangeSlider.AutoToolTipPlacement}"
                AutoToolTipPrecision="{TemplateBinding local:RangeSlider.AutoToolTipPrecision}"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="local:RangeSlider.TickPlacement" Value="TopLeft">
        <Setter TargetName="LeftColumn" Property="ColumnDefinition.Width" Value="4"/>
      </Trigger>
      <Trigger Property="local:RangeSlider.TickPlacement" Value="BottomRight">
        <Setter TargetName="RightColumn" Property="ColumnDefinition.Width" Value="4"/>
      </Trigger>
      <Trigger Property="local:RangeSlider.TickPlacement" Value="Both">
        <Setter TargetName="LeftColumn" Property="ColumnDefinition.Width" Value="4"/>
        <Setter TargetName="RightColumn" Property="ColumnDefinition.Width" Value="4"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type local:RangeSlider}">
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:RangeSlider}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
              <Grid.RowDefinitions>
                <RowDefinition x:Name="TopRow" Height="0"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition x:Name="BottomRow" Height="0"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="11"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="11"/>
              </Grid.ColumnDefinitions>
              <Border Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" BorderThickness="1"
                      BorderBrush="{StaticResource SliderBorderBrush}" Background="#FFE7EAEA" VerticalAlignment="Center"
                      Height="4"/>
              <Slider x:Name="TickSlider" Grid.ColumnSpan="5" Grid.RowSpan="3" Focusable="false" Margin="5.5,0,5.5,0"
                      Template="{StaticResource HorizontalTickSliderTemplate}"
                      TickFrequency="{TemplateBinding local:RangeSlider.TickFrequency}"
                      Minimum="{Binding Minimum, ElementName=PART_LowerSlider}"
                      Maximum="{Binding Maximum, ElementName=PART_HigherSlider}"/>
              <RepeatButton x:Name="PART_LowerRange" Width="{TemplateBinding local:RangeSlider.LowerRangeWidth}"
                            Grid.Column="1" Grid.Row="1" Background="{TemplateBinding local:RangeSlider.LowerRangeBackground}"
                            SnapsToDevicePixels="true"
                            Style="{Binding LowerRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}"/>
              <RepeatButton Width="{TemplateBinding local:RangeSlider.RangeWidth}" Grid.Column="2" Grid.Row="1"
                            Background="{TemplateBinding local:RangeSlider.RangeBackground}" SnapsToDevicePixels="true"
                            Style="{Binding RangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}"/>
              <RepeatButton x:Name="PART_HigherRange" Width="{TemplateBinding local:RangeSlider.HigherRangeWidth}"
                            Grid.Column="3" Grid.Row="1" Background="{TemplateBinding local:RangeSlider.HigherRangeBackground}"
                            SnapsToDevicePixels="true"
                            Style="{Binding HigherRangeStyle, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DefaultRangeStyle}}"/>
              <Slider x:Name="PART_LowerSlider" Grid.ColumnSpan="5" Grid.Row="1" Focusable="false"
                      Background="{TemplateBinding local:RangeSlider.LowerThumbBackground}"
                      Template="{StaticResource SliderTemplate}"
                      IsSnapToTickEnabled="{TemplateBinding local:RangeSlider.IsSnapToTickEnabled}"
                      TickFrequency="{TemplateBinding local:RangeSlider.TickFrequency}"
                      AutoToolTipPlacement="{TemplateBinding local:RangeSlider.AutoToolTipPlacement}"
                      AutoToolTipPrecision="{TemplateBinding local:RangeSlider.AutoToolTipPrecision}"/>
              <Slider x:Name="PART_HigherSlider" Grid.ColumnSpan="5" Grid.Row="1" Focusable="false"
                      Background="{TemplateBinding local:RangeSlider.HigherThumbBackground}"
                      Template="{StaticResource SliderTemplate}"
                      IsSnapToTickEnabled="{TemplateBinding local:RangeSlider.IsSnapToTickEnabled}"
                      TickFrequency="{TemplateBinding local:RangeSlider.TickFrequency}"
                      AutoToolTipPlacement="{TemplateBinding local:RangeSlider.AutoToolTipPlacement}"
                      AutoToolTipPrecision="{TemplateBinding local:RangeSlider.AutoToolTipPrecision}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="local:RangeSlider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopRow" Property="RowDefinition.Height" Value="4"/>
            </Trigger>
            <Trigger Property="local:RangeSlider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomRow" Property="RowDefinition.Height" Value="4"/>
            </Trigger>
            <Trigger Property="local:RangeSlider.TickPlacement" Value="Both">
              <Setter TargetName="TopRow" Property="RowDefinition.Height" Value="4"/>
              <Setter TargetName="BottomRow" Property="RowDefinition.Height" Value="4"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="local:RangeSlider.Orientation" Value="Vertical">
        <Setter Property="Control.Template" Value="{StaticResource VerticalRangeSlider}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>