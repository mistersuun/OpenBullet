<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:prim="clr-namespace:Xceed.Wpf.Toolkit.Primitives"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters">
  <conv:InverseBoolConverter x:Key="InverseBoolConverter"/>
  <DataTemplate x:Key="DefaultWatermarkTemplate">
    <ContentControl Foreground="Gray" Focusable="false" Margin="0,0,3,0" Content="{Binding}"/>
  </DataTemplate>
  <Style x:Key="NumericUpDown" TargetType="{x:Type prim:InputBase}">
    <Setter Property="Control.Background"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Right"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="prim:InputBase.TextAlignment" Value="Right"/>
    <Setter Property="prim:InputBase.WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <local:ButtonSpinner x:Name="PART_Spinner" IsTabStop="false" Background="{TemplateBinding Control.Background}"
                               BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}" HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                               ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                               ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}">
            <local:WatermarkTextBox x:Name="PART_TextBox" BorderThickness="0" Background="Transparent"
                                    ContextMenu="{TemplateBinding FrameworkElement.ContextMenu}"
                                    FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                                    FontStretch="{TemplateBinding Control.FontStretch}" FontStyle="{TemplateBinding Control.FontStyle}"
                                    FontWeight="{TemplateBinding Control.FontWeight}" Foreground="{TemplateBinding Control.Foreground}"
                                    HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsTabStop="true"
                                    MinWidth="20" AcceptsReturn="false" Padding="{TemplateBinding Control.Padding}"
                                    TextWrapping="NoWrap" TabIndex="{TemplateBinding Control.TabIndex}"
                                    VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                    Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                    WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}">
            </local:WatermarkTextBox>
          </local:ButtonSpinner>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False"/>
                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_TextBox" Property="TextBoxBase.IsReadOnly" Value="true"/>
            </MultiDataTrigger>
            <DataTrigger Value="True" Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}">
              <Setter TargetName="PART_TextBox" Property="TextBoxBase.IsReadOnly" Value="true"/>
            </DataTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="PART_TextBox" Value="{Binding ElementName=PART_TextBox}"
                      Property="FocusManager.FocusedElement"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:DecimalUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:DoubleUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:IntegerUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:ShortUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:LongUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:ByteUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:SingleUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:SByteUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:UIntegerUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:ULongUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
  <Style TargetType="{x:Type local:UShortUpDown}" BasedOn="{StaticResource NumericUpDown}"/>
</ResourceDictionary>