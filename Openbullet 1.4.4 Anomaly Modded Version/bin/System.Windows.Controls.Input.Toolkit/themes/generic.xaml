<ResourceDictionary xmlns:input="clr-namespace:System.Windows.Controls"
                    xmlns:inputPrimitivesToolkit="clr-namespace:System.Windows.Controls"
                    xmlns:inputToolkit="clr-namespace:System.Windows.Controls"
                    xmlns:inputToolkitPrimitives="clr-namespace:System.Windows.Controls.Primitives"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="{Type ToolTip}">
    <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
      <UIElement.RenderTransform>
        <TranslateTransform x:Name="Translation" X="-25"/>
      </UIElement.RenderTransform>
      <vsm:VisualStateManager.VisualStateGroups>
        <vsm:VisualStateGroup x:Name="OpenStates">
          <vsm:VisualStateGroup.Transitions>
            <vsm:VisualTransition GeneratedDuration="0"/>
            <vsm:VisualTransition To="Open" GeneratedDuration="0:0:0.2">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2"/>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
              </Storyboard>
            </vsm:VisualTransition>
          </vsm:VisualStateGroup.Transitions>
          <vsm:VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
            </Storyboard>
          </vsm:VisualState>
          <vsm:VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0"/>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
            </Storyboard>
          </vsm:VisualState>
        </vsm:VisualStateGroup>
      </vsm:VisualStateManager.VisualStateGroups>
      <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5"/>
      <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4"/>
      <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3"/>
      <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2"/>
      <Border Background="#FFDC000C" CornerRadius="2">
        <TextBlock Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap"
                   Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
      </Border>
    </Grid>
  </ControlTemplate>
  <Style TargetType="{Type inputToolkit:AutoCompleteBox}">
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0"/>
          <GradientStop Color="#FF8399A9" Offset="0.375"/>
          <GradientStop Color="#FF718597" Offset="0.375"/>
          <GradientStop Color="#FF617584" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Background" Value="#FFFFFFFF"/>
    <Setter Property="Control.Foreground" Value="#FF000000"/>
    <Setter Property="FrameworkElement.MinWidth" Value="45"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type inputToolkit:AutoCompleteBox}">
          <Grid Opacity="{TemplateBinding UIElement.Opacity}">
            <TextBox x:Name="Text" Padding="{TemplateBinding Control.Padding}"
                     Background="{TemplateBinding Control.Background}" IsTabStop="true"
                     Style="{TemplateBinding inputToolkit:AutoCompleteBox.TextBoxStyle}"
                     BorderThickness="{TemplateBinding Control.BorderThickness}"
                     BorderBrush="{TemplateBinding Control.BorderBrush}"
                     Foreground="{TemplateBinding Control.Foreground}" Margin="0"/>
            <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1"
                    CornerRadius="1">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" Template="{StaticResource CommonValidationToolTipTemplate}"
                         Placement="Right" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  <FrameworkElement.Triggers>
                    <EventTrigger RoutedEvent="Canvas.Loaded">
                      <BeginStoryboard>
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <ObjectKeyFrame.Value>
                                <Boolean>true</Boolean>
                              </ObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </BeginStoryboard>
                    </EventTrigger>
                  </FrameworkElement.Triggers>
                </ToolTip>
              </ToolTipService.ToolTip>
              <Grid Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12"
                    Background="Transparent">
                <Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M 1,0 L 6,0 A 2,2 90 0 1 8,2 L 8,7 Z"/>
                <Path Fill="#ffffff" Margin="1,3,0,0" Data="M 0,0 L 2,0 8,6 8,8 "/>
              </Grid>
            </Border>
            <Popup x:Name="Popup">
              <Grid Opacity="{TemplateBinding UIElement.Opacity}" Background="{TemplateBinding Control.Background}">
                <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Opacity="0" BorderThickness="0">
                  <UIElement.RenderTransform>
                    <TranslateTransform X="1" Y="1"/>
                  </UIElement.RenderTransform>
                  <Border.Background>
                    <SolidColorBrush Color="#11000000"/>
                  </Border.Background>
                  <Border HorizontalAlignment="Stretch" Opacity="1.0" Padding="0"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="0">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TranslateTransform X="-1" Y="-1"/>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                    <Border.Background>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFDDDDDD" Offset="0"/>
                        <GradientStop Color="#AADDDDDD" Offset="1"/>
                      </LinearGradientBrush>
                    </Border.Background>
                    <ListBox x:Name="Selector" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ItemContainerStyle="{TemplateBinding inputToolkit:AutoCompleteBox.ItemContainerStyle}"
                             Background="{TemplateBinding Control.Background}" Foreground="{TemplateBinding Control.Foreground}"
                             BorderThickness="0" ItemTemplate="{TemplateBinding inputToolkit:AutoCompleteBox.ItemTemplate}"/>
                  </Border>
                </Border>
              </Grid>
            </Popup>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="PopupStates">
                <vsm:VisualStateGroup.Transitions>
                  <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened"/>
                  <vsm:VisualTransition GeneratedDuration="0:0:0.2" To="PopupClosed"/>
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="PopupOpened">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.1"/>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="PopupClosed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="ValidationStates">
                <vsm:VisualState x:Name="Valid"/>
                <vsm:VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <ObjectKeyFrame.Value>
                          <Boolean>True</Boolean>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type inputToolkit:Rating}">
    <Setter Property="Control.Background" Value="#FFFFFFFF"/>
    <Setter Property="Control.BorderBrush" Value="#FF545454"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Foreground">
      <Setter.Value>
        <RadialGradientBrush Center="0.548,0.475" GradientOrigin="0.484,0.537">
          <GradientStop Color="#FFB10000" Offset="1"/>
          <GradientStop Color="#FFF70000"/>
          <GradientStop Color="#FFFA0000" Offset="0.043"/>
        </RadialGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type inputToolkit:Rating}">
          <Grid x:Name="Root">
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver"/>
                <vsm:VisualState x:Name="Pressed"/>
                <vsm:VisualState x:Name="Disabled"/>
                <vsm:VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ReadOnlyVisualElement"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.03"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused"/>
                <vsm:VisualState x:Name="Unfocused"/>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
              <ItemsPresenter/>
            </Border>
            <Border x:Name="ReadOnlyVisualElement" IsHitTestVisible="false" Opacity="0" Background="#83FFFFFF"
                    BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding Control.BorderThickness}"/>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#FF4D4D4D"
                    BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding Control.BorderThickness}"/>
            <Rectangle x:Name="FocusVisualElement" StrokeThickness="1" RadiusX="1" RadiusY="1" IsHitTestVisible="false"
                       Visibility="Collapsed"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{Type inputToolkit:RatingItem}">
    <Setter Property="Control.BorderBrush" Value="#FF545454"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{Type inputToolkit:RatingItem}">
          <Grid Background="{TemplateBinding Control.Background}" Width="20">
            <Grid.RowDefinitions>
              <RowDefinition Height="20"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <vsm:VisualStateManager.VisualStateGroups>
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal"/>
                <vsm:VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverHighlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.325"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverHighlight"
                                                  Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                      <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6E0000"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="PressedRatingItem"
                                                  Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                      <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFFEFEFE"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.39"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledRatingItemBackground"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="ReadOnly">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard/>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused"/>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FillStates">
                <vsm:VisualState x:Name="Empty"/>
                <vsm:VisualState x:Name="Partial"/>
                <vsm:VisualState x:Name="Filled"/>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Border Background="#02FFFFFF" BorderThickness="0"/>
            <Path x:Name="DefaultRatingItem" Fill="White" Stretch="Fill"
                  Stroke="{TemplateBinding Control.BorderBrush}" StrokeLineJoin="Round" StrokeThickness="0.4"
                  VerticalAlignment="Stretch" Opacity="1"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"/>
            <inputToolkitPrimitives:LinearClipper RatioVisible="{TemplateBinding inputToolkit:RatingItem.DisplayValue}" ExpandDirection="Right">
              <Path Fill="{TemplateBinding Control.Foreground}" Stretch="Fill" StrokeLineJoin="Round"
                    VerticalAlignment="Stretch" Opacity="1"
                    Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                    Stroke="{Null}"/>
            </inputToolkitPrimitives:LinearClipper>
            <Path x:Name="MouseOverRatingItem" Fill="{TemplateBinding Control.Foreground}" Stretch="Fill"
                  StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="0"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                  Stroke="{Null}"/>
            <Path x:Name="MouseOverHighlight" Fill="#FFFFFFFF" Stretch="Fill" StrokeLineJoin="Round"
                  VerticalAlignment="Stretch" Opacity="0"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                  Stroke="{Null}"/>
            <Path x:Name="PressedRatingItem" Stretch="Fill" StrokeLineJoin="Round" VerticalAlignment="Stretch"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                  Fill="#82000000" Opacity="0" Stroke="{Null}"/>
            <Path x:Name="FocusRatingItem" Stretch="Fill" Stroke="#FF6DBDD1" StrokeLineJoin="Round"
                  StrokeThickness="0.01" VerticalAlignment="Stretch" Opacity="0"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"/>
            <Path x:Name="ReadOnlyRatingItem" Fill="#18FFFFFF" Stretch="Fill"
                  Stroke="{TemplateBinding Control.BorderBrush}" StrokeLineJoin="Round" StrokeThickness="0.4"
                  VerticalAlignment="Stretch"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                  IsHitTestVisible="false" Opacity="0"/>
            <Path x:Name="DisabledRatingItemBackground" Stretch="Fill" StrokeLineJoin="Round"
                  VerticalAlignment="Stretch"
                  Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                  Fill="Gainsboro" Opacity="0" Stroke="{Null}"/>
            <inputToolkitPrimitives:LinearClipper x:Name="DisabledRatingItem" RatioVisible="{TemplateBinding inputToolkit:RatingItem.DisplayValue}"
                                                  ExpandDirection="Right" Opacity="0">
              <Path Stretch="Fill" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="1"
                    Data="M 15,0 L 18.6,11.373603 30,11.459046 20.824955,18.573566 24.270519,30 15,23.023449 5.7294912,30 9.1750822,18.573566 0,11.459046 11.399999,11.373603 Z"
                    Fill="#FF5E5E5E" Stroke="{Null}"/>
            </inputToolkitPrimitives:LinearClipper>
            <ContentPresenter x:Name="Content" Cursor="{TemplateBinding FrameworkElement.Cursor}" HorizontalAlignment="Left"
                              Margin="{TemplateBinding Control.Padding}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.RowSpan="2" Grid.Row="1"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>