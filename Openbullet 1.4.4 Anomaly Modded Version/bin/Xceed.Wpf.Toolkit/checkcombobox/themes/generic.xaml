<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:prim="clr-namespace:Xceed.Wpf.Toolkit.Primitives"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
                    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes">
  <conv:InverseBoolConverter x:Key="InverseBoolConverter"/>
  <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
  <Geometry x:Key="DownArrowGeometry">
    M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z
  </Geometry>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <chrome:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}" CornerRadius="0"
                               RenderEnabled="{TemplateBinding UIElement.IsEnabled}" RenderNormal="false"
                               SnapsToDevicePixels="true" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
                               RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
              </Grid.ColumnDefinitions>
              <TextBox x:Name="TextBox" Foreground="{TemplateBinding Control.Foreground}" IsReadOnly="true"
                       Focusable="false" Cursor="Arrow" BorderThickness="0" Background="Transparent"
                       Margin="{TemplateBinding Control.Padding}"
                       HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                       VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                       Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
              </TextBox>
              <Grid Column="1" HorizontalAlignment="Right"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center"
                      Margin="3,0,3,0" VerticalAlignment="Center"/>
              </Grid>
            </Grid>
          </chrome:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="chrome:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
            </Trigger>
            <DataTrigger Value="True"
                         Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type local:CheckComboBox}}}">
              <Setter TargetName="TextBox" Property="TextBoxBase.IsReadOnly" Value="false"/>
              <Setter TargetName="TextBox" Property="UIElement.Focusable" Value="true"/>
              <Setter TargetName="TextBox" Value="{x:Null}" Property="FrameworkElement.Cursor"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:CheckComboBox}">
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CheckComboBox}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Popup x:Name="PART_Popup" AllowsTransparency="true" StaysOpen="false" Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
              <Grid MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <Border x:Name="DropDownBorder"
                        BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                        Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"
                        MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                  <ScrollViewer x:Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                   Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                   Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                      </Canvas>
                      <StackPanel>
                        <prim:SelectAllSelectorItem x:Name="PART_SelectAllSelectorItem"
                                                    Content="{TemplateBinding prim:SelectAllSelector.SelectAllContent}"
                                                    Visibility="{Binding IsSelectAllActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <ItemsPresenter x:Name="PART_ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      </StackPanel>
                    </Grid>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Popup>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"/>
            <ToggleButton x:Name="PART_DropDownButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Background="{TemplateBinding Control.Background}" Focusable="false"
                          Style="{StaticResource ComboBoxToggleButton}" Padding="{TemplateBinding Control.Padding}"
                          VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          Content="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          IsHitTestVisible="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>