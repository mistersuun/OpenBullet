<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes">
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:IconButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Control.Background"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonNormalBackgroundKey}}"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonNormalOuterBorderKey}}"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="local:IconButton.MouseOverForeground" Value="Black"/>
    <Setter Property="local:IconButton.MousePressedForeground" Value="Black"/>
    <Setter Property="local:IconButton.MouseOverBackground"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverBackgroundKey}}"/>
    <Setter Property="local:IconButton.MousePressedBackground"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedBackgroundKey}}"/>
    <Setter Property="local:IconButton.MouseOverBorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverOuterBorderKey}}"/>
    <Setter Property="local:IconButton.MousePressedBorderBrush"
            Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedOuterBorderKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:IconButton}">
          <Border x:Name="defaultBorder" BorderThickness="1" BorderBrush="Transparent">
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <Grid VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    Margin="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="firstColumn" Width="Auto"/>
                  <ColumnDefinition x:Name="secondColumn" Width="*"/>
                </Grid.ColumnDefinitions>
                <ContentControl x:Name="icon" Content="{TemplateBinding local:IconButton.Icon}" VerticalAlignment="Center"/>
                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false" RecognizesAccessKey="true"
                                  VerticalAlignment="Center"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
              <Setter TargetName="defaultBorder" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="contentPresenter"
                      Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="border"
                      Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.Background"/>
              <Setter TargetName="border"
                      Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="contentPresenter"
                      Value="{Binding MousePressedForeground, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="border"
                      Value="{Binding MousePressedBackground, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.Background"/>
              <Setter TargetName="border"
                      Value="{Binding MousePressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="border"
                      Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonDisabledOuterBorderKey}}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border"
                      Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}"
                      Property="Border.Background"/>
              <Setter TargetName="contentPresenter" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"
                      Property="TextElement.Foreground"/>
            </Trigger>
            <Trigger Property="local:IconButton.IconLocation" Value="Right">
              <Setter TargetName="firstColumn" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="secondColumn" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="icon" Property="Grid.Column" Value="1"/>
              <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>