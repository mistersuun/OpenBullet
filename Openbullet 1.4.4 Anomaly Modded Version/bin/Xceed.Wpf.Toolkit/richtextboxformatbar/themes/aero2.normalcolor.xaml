<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../../Themes/Aero2/Glyphs.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <conv:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
  <ControlTemplate x:Key="ThumbControlTemplate" TargetType="{x:Type Thumb}">
    <Border Background="Transparent" Cursor="Hand" ToolTip="Click to Drag">
      <StackPanel VerticalAlignment="Center" Width="75">
        <Line SnapsToDevicePixels="true" Stretch="Fill" StrokeDashArray="1,2" StrokeThickness="1" X1="0" X2="1"
              Margin=".5">
          <Shape.Stroke>
            <SolidColorBrush Color="Gray"/>
          </Shape.Stroke>
        </Line>
        <Line SnapsToDevicePixels="true" Stretch="Fill" StrokeDashArray="1,2" StrokeThickness="1" X1="0" X2="1"
              Margin=".5">
          <Shape.Stroke>
            <SolidColorBrush Color="Gray"/>
          </Shape.Stroke>
        </Line>
        <Line SnapsToDevicePixels="true" Stretch="Fill" StrokeDashArray="1,2" StrokeThickness="1" X1="0" X2="1"
              Margin=".5">
          <Shape.Stroke>
            <SolidColorBrush Color="Gray"/>
          </Shape.Stroke>
        </Line>
      </StackPanel>
    </Border>
  </ControlTemplate>
  <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFFFB700"/>
  <LinearGradientBrush x:Key="MouseOverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFFEFBF4"/>
    <GradientStop Offset="0.19" Color="#FFFDE7CE"/>
    <GradientStop Offset="0.39" Color="#FFFDDEB8"/>
    <GradientStop Offset="0.39" Color="#FFFFCE6B"/>
    <GradientStop Offset="0.79" Color="#FFFFDE9A"/>
    <GradientStop Offset="1" Color="#FFFFEBAA"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckedBorderBrush" Color="#FFC29B29"/>
  <LinearGradientBrush x:Key="CheckedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFFFDCA0"/>
    <GradientStop Offset="0.18" Color="#FFFFD692"/>
    <GradientStop Offset="0.39" Color="#FFFFC45D"/>
    <GradientStop Offset="1" Color="#FFFFD178"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFC29B29"/>
  <LinearGradientBrush x:Key="PressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#FFE3C085"/>
    <GradientStop Offset="0.19" Color="#FFF4CC89"/>
    <GradientStop Offset="0.36" Color="#FFF5C777"/>
    <GradientStop Offset="0.36" Color="#FFF5BB56"/>
    <GradientStop Offset="0.79" Color="#FFF4CE9A"/>
    <GradientStop Offset="1" Color="#FFF3E28D"/>
  </LinearGradientBrush>
  <Style x:Key="FormatBarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
    <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
    <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" CornerRadius="0"/>
            <Border x:Name="MiddleBorder" BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"
                    CornerRadius="0">
              <Border x:Name="InnerBorder" BorderBrush="Transparent"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"
                      CornerRadius="0" Padding="{TemplateBinding Control.Padding}">
                <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}">
                  <ContentPresenter x:Name="Content" Content="{TemplateBinding ContentControl.Content}" Margin="1"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
                </StackPanel>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="OuterBorder" Value="{StaticResource MouseOverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Content" Property="UIElement.Opacity" Value="0.5"/>
              <Setter TargetName="OuterBorder" Property="TextElement.Foreground" Value="#FF9E9E9E"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="OuterBorder" Value="{StaticResource CheckedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource CheckedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFE7CBAD" Offset="0"/>
                    <GradientStop Color="#FFF7D7B5" Offset="0.1"/>
                    <GradientStop Color="#FFFFD38C" Offset="0.36"/>
                    <GradientStop Color="#FFFFC75A" Offset="0.36"/>
                    <GradientStop Color="#FFFFEFA5" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="OuterBorder" Value="{StaticResource PressedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="MiddleBorder" Property="Border.Background">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#40FFFEFE" Offset="0"/>
                    <GradientStop Color="#40FFFEFE" Offset="0.39"/>
                    <GradientStop Color="#20FFCE68" Offset="0.39"/>
                    <GradientStop Color="#20FFCE68" Offset="0.69"/>
                    <GradientStop Color="#10FFFFFF" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FontColorButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
    <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
    <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0"/>
            <Border x:Name="MiddleBorder" BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"
                    CornerRadius="0">
              <Border x:Name="InnerBorder" BorderBrush="Transparent"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"
                      CornerRadius="0" Padding="{TemplateBinding Control.Padding}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition/>
                  </Grid.ColumnDefinitions>
                  <Grid>
                    <Image Source="../Images/FontColorPicker16.png" Width="16" Height="16"/>
                    <Rectangle Grid.Row="1" Height="4" Margin="0,12,0,0"
                               Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                  </Grid>
                  <Path Grid.Column="1" Width="9" Height="5" Data="{StaticResource DownArrowGeometry}" Fill="#FF000000"
                        Margin="0,1,0,0"/>
                </Grid>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="OuterBorder" Value="{StaticResource MouseOverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="OuterBorder" Property="TextElement.Foreground" Value="#FF9E9E9E"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="OuterBorder" Value="{StaticResource CheckedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource CheckedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFE7CBAD" Offset="0"/>
                    <GradientStop Color="#FFF7D7B5" Offset="0.1"/>
                    <GradientStop Color="#FFFFD38C" Offset="0.36"/>
                    <GradientStop Color="#FFFFC75A" Offset="0.36"/>
                    <GradientStop Color="#FFFFEFA5" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="OuterBorder" Value="{StaticResource PressedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="MiddleBorder" Property="Border.Background">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#40FFFEFE" Offset="0"/>
                    <GradientStop Color="#40FFFEFE" Offset="0.39"/>
                    <GradientStop Color="#20FFCE68" Offset="0.39"/>
                    <GradientStop Color="#20FFCE68" Offset="0.69"/>
                    <GradientStop Color="#10FFFFFF" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="FontBackgrounColorButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
    <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
    <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0"/>
            <Border x:Name="MiddleBorder" BorderBrush="Transparent"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"
                    CornerRadius="0">
              <Border x:Name="InnerBorder" BorderBrush="Transparent"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" Background="Transparent"
                      CornerRadius="0" Padding="{TemplateBinding Control.Padding}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition/>
                  </Grid.ColumnDefinitions>
                  <Grid>
                    <Image Source="../Images/TextHighlightColorPicker16.png" Width="16" Height="16"/>
                    <Rectangle Grid.Row="1" Height="4" Margin="0,12,0,0"
                               Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                  </Grid>
                  <Path Grid.Column="1" Width="9" Height="5" Data="{StaticResource DownArrowGeometry}" Fill="#FF000000"
                        Margin="0,1,0,0"/>
                </Grid>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="OuterBorder" Value="{StaticResource MouseOverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="OuterBorder" Property="TextElement.Foreground" Value="#FF9E9E9E"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="OuterBorder" Value="{StaticResource CheckedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource CheckedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFE7CBAD" Offset="0"/>
                    <GradientStop Color="#FFF7D7B5" Offset="0.1"/>
                    <GradientStop Color="#FFFFD38C" Offset="0.36"/>
                    <GradientStop Color="#FFFFC75A" Offset="0.36"/>
                    <GradientStop Color="#FFFFEFA5" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="OuterBorder" Value="{StaticResource PressedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="MiddleBorder" Property="Border.Background">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#40FFFEFE" Offset="0"/>
                    <GradientStop Color="#40FFFEFE" Offset="0.39"/>
                    <GradientStop Color="#20FFCE68" Offset="0.39"/>
                    <GradientStop Color="#20FFCE68" Offset="0.69"/>
                    <GradientStop Color="#10FFFFFF" Offset="1"/>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="richTextBoxFormatBarTemplate" TargetType="{x:Type local:RichTextBoxFormatBar}">
    <FrameworkTemplate.Resources>
      <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
    </FrameworkTemplate.Resources>
    <Border CornerRadius="0" BorderThickness="1" BorderBrush="#FFADC7DE" Background="#FFDAE8F9">
      <Grid Margin="5,0,5,5">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Thumb x:Name="_dragWidget" Height="10" Template="{StaticResource ThumbControlTemplate}"/>
        <StackPanel Grid.Row="1">
          <StackPanel Orientation="Horizontal">
            <ComboBox x:Name="_cmbFontFamilies" IsEditable="true" Width="100" ToolTip="Font Family"/>
            <ComboBox x:Name="_cmbFontSizes" IsEditable="true" Width="43" ToolTip="Font Size"/>
            <Separator/>
            <ToggleButton x:Name="_btnBullets" Style="{StaticResource FormatBarToggleButtonStyle}"
                          Command="EditingCommands.ToggleBullets" ToolTip="Bullets"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/Bullets16.png"/>
            </ToggleButton>
            <ToggleButton x:Name="_btnNumbers" Style="{StaticResource FormatBarToggleButtonStyle}"
                          Command="EditingCommands.ToggleNumbering" ToolTip="Numbering"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/Numbering16.png"/>
            </ToggleButton>
          </StackPanel>
          <StackPanel Orientation="Horizontal" Margin="0,3,0,0">
            <ToggleButton x:Name="_btnBold" Style="{StaticResource FormatBarToggleButtonStyle}"
                          Command="EditingCommands.ToggleBold" ToolTip="Bold"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/Bold16.png"/>
            </ToggleButton>
            <ToggleButton x:Name="_btnItalic" Style="{StaticResource FormatBarToggleButtonStyle}"
                          Command="{x:Static EditingCommands.ToggleItalic}" ToolTip="Italic"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/Italic16.png"/>
            </ToggleButton>
            <ToggleButton x:Name="_btnUnderline" Style="{StaticResource FormatBarToggleButtonStyle}"
                          Command="{x:Static EditingCommands.ToggleUnderline}" ToolTip="Underline"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/Underline16.png"/>
            </ToggleButton>
            <Separator/>
            <RadioButton x:Name="_btnAlignLeft" Style="{StaticResource FormatBarToggleButtonStyle}"
                         Command="{x:Static EditingCommands.AlignLeft}" ToolTip="Align Left"
                         CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/LeftAlign16.png"/>
            </RadioButton>
            <RadioButton x:Name="_btnAlignCenter" Style="{StaticResource FormatBarToggleButtonStyle}"
                         Command="{x:Static EditingCommands.AlignCenter}" ToolTip="Align Center"
                         CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/CenterAlign16.png"/>
            </RadioButton>
            <RadioButton x:Name="_btnAlignRight" Style="{StaticResource FormatBarToggleButtonStyle}"
                         Command="{x:Static EditingCommands.AlignRight}" ToolTip="Align Right"
                         CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Target}">
              <Image Source="../Images/RightAlign16.png"/>
            </RadioButton>
            <Separator/>
            <local:ColorPicker x:Name="_cmbFontBackgroundColor" BorderThickness="0"
                               ButtonStyle="{StaticResource FontBackgrounColorButtonStyle}" ToolTip="Text Highlight Color"/>
            <local:ColorPicker x:Name="_cmbFontColor" BorderThickness="0" ButtonStyle="{StaticResource FontColorButtonStyle}"
                               ToolTip="Font Color"/>
          </StackPanel>
        </StackPanel>
      </Grid>
    </Border>
  </ControlTemplate>
  <Style TargetType="{x:Type local:RichTextBoxFormatBar}">
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template" Value="{StaticResource richTextBoxFormatBarTemplate}"/>
    <Setter Property="UIElement.Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="5" Opacity=".25"/>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>