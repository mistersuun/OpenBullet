<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit">
  <DataTemplate x:Key="DefaultWatermarkTemplate">
    <ContentControl Foreground="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Focusable="false"
                    Content="{Binding}"/>
  </DataTemplate>
  <ControlTemplate x:Key="WatermarkComboBoxTemplate" TargetType="{x:Type local:WatermarkComboBox}">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
             Placement="Bottom"
             IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        <Grid x:Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
              MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="true">
          <Border x:Name="DropDownBorder"
                  BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                  Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid">
                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
      <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="ButtonBase.ClickMode" Value="Press"/>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                  <Border x:Name="templateRoot" BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                    <Border.Background>
                      <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFF0F0F0" Offset="0"/>
                        <GradientStop Color="#FFE5E5E5" Offset="1"/>
                      </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right"
                            Margin="0" SnapsToDevicePixels="true"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                      <Path x:Name="Arrow"
                            Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                            Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                    </Border>
                  </Border>
                  <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="true"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background" Value="White"/>
                      <Setter TargetName="splitBorder" Property="Border.Background" Value="Transparent"/>
                      <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="Transparent"/>
                    </MultiDataTrigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="true">
                      <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="false"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background">
                        <Setter.Value>
                          <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FF7EB4EA"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="true"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background" Value="White"/>
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FF7EB4EA"/>
                      <Setter TargetName="splitBorder" Property="Border.Background">
                        <Setter.Value>
                          <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="#FF7EB4EA"/>
                    </MultiDataTrigger>
                    <Trigger Property="ButtonBase.IsPressed" Value="true">
                      <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="false"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background">
                        <Setter.Value>
                          <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FF569DE5"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="true"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background" Value="White"/>
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FF569DE5"/>
                      <Setter TargetName="splitBorder" Property="Border.Background">
                        <Setter.Value>
                          <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="#FF569DE5"/>
                    </MultiDataTrigger>
                    <Trigger Property="UIElement.IsEnabled" Value="false">
                      <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFBFBFBF"/>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="false"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background" Value="#FFF0F0F0"/>
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FFD9D9D9"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                   Value="true"/>
                      </MultiDataTrigger.Conditions>
                      <Setter TargetName="templateRoot" Property="Border.Background" Value="White"/>
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FFBFBFBF"/>
                      <Setter TargetName="splitBorder" Property="Border.Background" Value="Transparent"/>
                      <Setter TargetName="splitBorder" Property="Border.BorderBrush" Value="Transparent"/>
                    </MultiDataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </ToggleButton>
      <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                        Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                        Margin="{TemplateBinding Control.Padding}"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      <Border x:Name="Border" Background="White" Margin="{TemplateBinding Control.BorderThickness}"
              Visibility="Collapsed">
        <TextBox x:Name="PART_EditableTextBox"
                 HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                 Margin="{TemplateBinding Control.Padding}"
                 VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type TextBox}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="UIElement.AllowDrop" Value="true"/>
              <Setter Property="FrameworkElement.MinWidth" Value="0"/>
              <Setter Property="FrameworkElement.MinHeight" Value="0"/>
              <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
              <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </FrameworkElement.Style>
        </TextBox>
      </Border>
      <ContentPresenter x:Name="PART_WatermarkHost" Content="{TemplateBinding local:WatermarkComboBox.Watermark}"
                        ContentTemplate="{TemplateBinding local:WatermarkComboBox.WatermarkTemplate}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                        Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ItemsControl.HasItems" Value="false">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </MultiTrigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Top"/>
        <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Left"/>
      </Trigger>
      <Trigger Property="ComboBox.IsEditable" Value="true">
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="Control.Padding" Value="2"/>
        <Setter TargetName="Border" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="contentPresenter" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsKeyboardFocusWithin" Value="false"/>
          <Condition Property="ComboBox.Text" Value=""/>
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="PART_WatermarkHost" Property="UIElement.Visibility" Value="Visible"/>
        </MultiTrigger.Setters>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="WatermarkComboBox" TargetType="{x:Type local:WatermarkComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Margin="2" SnapsToDevicePixels="true"
                           Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                           StrokeDashArray="1 2"/>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Background">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
          <GradientStop Color="#FFF0F0F0" Offset="0"/>
          <GradientStop Color="#FFE5E5E5" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.BorderBrush" Value="#FFACACAC"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="6,3,5,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="local:WatermarkComboBox.WatermarkTemplate"
            Value="{StaticResource DefaultWatermarkTemplate}"/>
    <Setter Property="Control.Template" Value="{StaticResource WatermarkComboBoxTemplate}"/>
  </Style>
  <Style TargetType="{x:Type local:WatermarkComboBox}" BasedOn="{StaticResource WatermarkComboBox}"/>
</ResourceDictionary>